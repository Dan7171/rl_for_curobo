REQUIREMENTS:
All curobo requirements: https://curobo.org/get_started/1_install_instructions.html
If you install isaac sim: All isaac sim requirements: https://github.com/isaac-sim/IsaacSim

INSTALLATION:

____To use with Isaac Sim *5.0.0* (Valid: June 28 2025)_____
# source: https://github.com/isaac-sim/IsaacSim (readme)

PART 1: Get our repo:
1. Make a directory to clone our repo into:
    mkdir -p any/place/you/want/to/clone/our/repo/into 
    # for example mkdir /home/%your username%/%project repo dir%
    cd /home/%your username%/%project repo dir%
clone it: 
    git clone https://github.com/Dan7171/rl_for_curobo.git


PART 2: Installing isaac sim! (Optional but recommended as a simulator for this project. You can skip this but have no simulator)

1. See required software dependencies under: https://github.com/isaac-sim/IsaacSim
and make sure you have those.

2. Make a directory to clone isaacesim into (anywhere is fine):
    mkdir -p any/place/you/want/to/clone/isaacsim/into # Let's call it %isaac sim installation dir% I chose mkdir ~/isaacsim500
    cd any/place/you/want/to/clone/isaacsim/into # cd %isaac sim installation dir%

3. Clone isaacsim: # https://github.com/isaac-sim/IsaacSim
    git clone https://github.com/isaac-sim/IsaacSim.git isaacsim
    cd isaacsim
    git lfs install
    git lfs pull 

4. Build isaac sim # https://github.com/isaac-sim/IsaacSim
Confirm that GCC/G++ 11 is being used before building using the following commands:
    gcc --version
    g++ --version
Then build:
    cd _build/linux-x86_64/release
    ./isaac-sim.sh

5. Test everything works: # https://github.com/isaac-sim/IsaacSim
    cd _build/linux-x86_64/release # where all build artifacts are
    ./isaac-sim.sh # running isaac sim app
    # you should wait a few minutes and get isaac app ready!


PART 3: Making our initial conda environment! (at this point for isaacsim only)
# goal of this step is to make a conda environment which "knows" where our isaacsim installaion is.

# source: see "running in anaconda": https://docs.isaacsim.omniverse.nvidia.com/5.0.0/installation/install_python.html (isaacsim often break the docs and pages could be out dated. 
If thats your case: search for "setup_conda_env.sh" in their docs to find the references for the steps below)

# 0. pick a conda envirnment name and don't use isaac-sim default env name: 
# TIP: (my tip - not in nvidia docs)There are many isaac sim envs and most of them are configured to create a conda env named "isaac-sim" 
# so: the tip is to choose a name for your conda env to avoid conflicts if you have different isaacsim versions installed on your pc and you want a sepereate conda env for each installation to avoid conflicts...
# I chose "is500" (stands for isaac sim 5.0.0)... 

1. Go to the build dir again:
    cd _build/linux-x86_64/release

2. Create the isaac sim conda env based on the file environment.yml:
a. if you want to use the tip at step 0 (optional), open environment.yml and modify "name: isaac-sim" to "name: %your env name% (i chose is500)" 
If you use the tip, can ignore "conda remove --name isaac-sim --all" runnning 
b.  
    conda env create -f environment.yml
c. 
    conda activate %your env name% # activates the environment
    # conda activate isaac-sim if you haven't used the tip
d. 
    source setup_conda_env.sh # every time we open a terminal?
    # this command tells terminal where your isaac sim sw is installled at...

e. Test conda env detects isaacsim and runs SimulationApp successfully:
    python projects_root/examples/test_isaacsim.py
    # the desired behavior is a simulation window loaded which you can end with ctrl + c.

f. Now you can run any isaac sim based 
    python path/to/script.py # it will 

PART 4 - SETUP CUROBO ENVIRONMENT:
# source: https://curobo.org/get_started/1_install_instructions.html
# specifically "library installation" part: https://curobo.org/get_started/1_install_instructions.html#:~:text=git%2Dlfs).-,Library%20Installation,-%C2%B6
go to the project directory:
    cd /home/%your username%/%project repo dir%/curobo (see above)
# If you followed isaac sim part above, use the conda env we made earlier. 
# Else, just make a new conda env (conda create -n %your env name%) 
activate your conda env (if not already activated):
    conda activate %your env name%
install curobo packes to your condna env:
    pip install pybind11 ninja
    conda install -c conda-forge pybind11
    pip install -e . --no-build-isolation # takes some time
    pip install matplotlib
install the main project as a package:
    cd /home/%your username%/%project repo dir%
    pip install -e .
test:

first test curobo without isaacsim:
    python curobo/examples/mpc_example.py
    # expected output:
    # should be similar to:
    # MPC (converged, error, steps, opt_time, mpc_time):  True 0.009228384122252464 651 0.0024483203887939453 0.004140437665835831

then test curobo with isaacsim:
    # first source the conda environment setup script so conda env will know where isaac sim is!
    source %isaac sim installation dir%/isaacsim/_build/linux-x86_64/release/setup_conda_env.sh

    # then run an example including isaac sim (you should see gui and reaching target):
    python curobo/examples/isaac_sim/mpc_example.py

PART 5 - ROS2
# sources: 
# isaacsim ros installation:
https://docs.isaacsim.omniverse.nvidia.com/5.0.0/installation/install_ros.html
# ros jazzy (I used ubuntu 24.04 so its recommended to use jazzy, but other distros should work too):
https://docs.ros.org/en/jazzy/Installation/Ubuntu-Install-Debs.html

a. Install ros2 as specified(depending on your isaacsim & ubuntu versions versions):at 
    https://docs.isaacsim.omniverse.nvidia.com/5.0.0/installation/install_ros.html 
    # I have ubuntu 24.04 so I installed jazzy. Note: Verify python version of conda env supports the ros disto...

b. build isaac ros workspace: 

sources:
    https://github.com/isaac-sim/IsaacSim-ros_workspaces?tab=readme-ov-file
    https://docs.isaacsim.omniverse.nvidia.com/5.0.0/installation/install_ros.html#setting-up-workspaces

first try installing based on docs (# change jazzy to humle if you are using humble)
    # enter your env:
        conda activate %your env name%
    # clone this:
        git clone https://github.com/isaac-sim/IsaacSim-ros_workspaces
    run as in instructions:
        # For rosdep install command
        sudo apt install python3-rosdep build-essential
        # For colcon build command
        sudo apt install python3-colcon-common-extensions
        # source /opt/ros/jazzy/setup.bash should already be sourced if used activate.d in conda env (see tips)
        cd jazzy_ws
        git submodule update --init --recursive # If using docker, perform this step outside the container and relaunch the container
        rosdep install -i --from-path src --rosdistro jazzy -y

# troubleshoot for docs installation (worked for me) :
conda activate %your env name%
if having ssl errors run:
    export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
then run:
    rm -rf build/ install/ log/
    source /opt/ros/jazzy/setup.bash
    rosdep install --from-paths src --ignore-src --rosdistro=jazzy -y  
    colcon build
    rosdep update
    pip install catkin_pkg empy lark
    source install/local_setup.bash # will probably need to add to conda env activate.d 
to verify everything is set properly, run:
    







# GENERAL TIPS:
pro tip 1:
    replace the manual call (every time you start the conda env) to:
        source %isaac sim installation dir%/isaacsim/_build/linux-x86_64/release/setup_conda_env.sh
    
    by adding an activate.d to your conda file that does that for you automatically.
    steps:
        find your codna env path:
            normally it's: /home/%your user name%/anaconda3/envs/%your env name%
        cd to it 
            cd /home/%your user name%/anaconda3/envs/%your env name% 
        run next command to make the activate.d dir and file in it:        
            touch -p /etc/conda/activate.d/isaac_sim_setup.sh
        copy next 2 lines to isaac_sim_setup.sh:
            #!/bin/bash
            source %isaac sim installation dir%/isaacsim/_build/linux-x86_64/release/setup_conda_env.sh
        

    




