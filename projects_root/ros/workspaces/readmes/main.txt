
# Folder structure:
1. template_ws: workspace for the files from https://www.youtube.com/watch?v=pGje2slp6-s which show an example for ur5 robot
2. moveit2_setup_assistant_inputs_ws: workspace for making and storing the input packages for moveit setup assistant. These pacakges containt robot descriptions only according to a strict format. 
3. moveit_cfgs_ws : workspace for the out packages generated automatically by moveit setup assistant


# How to make a custom robot working end to end example?
## Requirements:
1. a folder (not yet ros package) contains:  
    1. the robot(s) urdf(s) (your_robot_name.urdf or many files like this)
    2. meshe files of the robot if exist (collision, visual)
2. %robot description package name%: a name for the robot/s description/s packge, that you want to call the new package in ("my_custom_robot", "k_arm_franka", "mix_of_arm_models", "custom_kuka"...).
3. %moveit robot cfg package name% a name for the auto-generate moveit configuration package. This should be robot specific (unlike ) %robot description package name% which can contain many robots under one package) 

## Steps:
### Step 1: making a robot description package 
1. Copy the folde "empty_robot_description_pkg_template" to moveit2_setup_assistant_inputs_ws/src/empty_robot_description_pkg_template
2. rename the folder: from moveit2_setup_assistant_inputs_ws/src/empty_robot_description_pkg_template to from moveit2_setup_assistant_inputs_ws/src/%robot description package name% 
3. In the renamed folder:
    1. In file: _CMakeLists.txt
        1. Delete the row # FILL THE FIELDS WITH THE @@@@ AND REMOVE THIS COMMENT
        2. Change project(@@@@ put here the name of your package  ) to project(%robot description package name%)
        3. remove the _ (change name to CMakeLists.txt)
    2. In file _package.xml:
        1. Delete the row # FILL THE FIELDS WITH THE @@@@ AND REMOVE THIS COMMENT
        2. Change project(@@@@ put here the name of your package  ) to project(%robot description package name%)
        3. Similarly add description if you want instead of @@@@ here add description of the robot (or just keep empty)
        4. remove the _ (change name to package.xml)
    3. For each urdf file in the Requirements (each file describes one robot (many robots can be in this package (like: franka 1 arm, franka 2 arms...))
        1. copy the content from the urdf file (your_robot.urdf) to moveit2_setup_assistant_inputs_ws/src/urdf/your_robot.urdf
        2. copy all visual meshes (from your original urdf input folder) under moveit2_setup_assistant_inputs_ws/src/urdf/meshes/visual and similarly all collision meshes under moveit2_setup_assistant_inputs_ws/src/meshes/collision
        3. change manually (or with ctrl+r in vsc): *every* entry at the urdf file that starts with "mesh" like that:

            # delete old entry name:
            <mesh filename="some/old/path/to/mesh/mesh filename.some extension"/>

            # replace to new entry name:
            # if its a *visual* mesh:
                <mesh filename=package://%robot description package name%/meshes/visual/mesh filename.some extension
            # if its a *collision* mesh:
                <mesh filename=package://%robot description package name%/meshes/collision/mesh filename.some extension

# build the new package and source your workspace:
4. cd projects_root/ros/workspaces/moveit_cfgs_ws
5. source /opt/ros/humble/setup.bash 
6. colcon build
7. soucre install/setup.bash
# If there are no bugs here, you can proceed to "moveit setup assistant" to make config...

### Step 2: making moveit config from the robot description package
1. source /opt/ros/humble/setup.bash
2. ros2 launch moveit_setup_assistant setup_assistant.launch.py
3. load once urdf you made in step 2 (from the package you made)
4. configure your robot, see tutorials here: https://www.youtube.com/watch?v=pGje2slp6-s and in many places in youtube
when reaching the last step of saving:
    1. make a new empty directory in the source dir (moveit setup assistant will generate package files into it) 
    as follows: moveit_cfgs_ws/src/%moveit robot cfg package name% # keep empty
    2. select it in the place to put configs to in the setup assistant (last step)
    after finishing with the assistant, all files should be there (its a new ros package)

5. close the setup assitant
6. cd moveit_cfgs_ws
7. colcon build
8. soucre install/setup.bash

### Step 3: run moveit with the new moveit config
1. cd moveit_cfgs_ws
2. soucre install/setup.bash
3. cd moveit2_setup_assistant_inputs_ws
4. soucre install/setup.bash
5. ros2 launch %moveit robot cfg package name% demo.launch.py


### Step 4: launch isaac sim
TODO


















####################
HOWTO
####################
Q: How to  change initial joint states of moveit rviz loading for a robot moveit config?
A:

1. cd moveit_cfgs_ws/src/%moveit robot cfg package name%/config
2. open file initial_positions.yaml
3. edit the file as you want (set new states)
4. cd moveit_cfgs_ws
5. colcon build # important, changes would not apply otherwise
6. soucre install/setup.bash
7. run again ros2 launch %moveit robot cfg package name% demo.launch.py to verify the change






