##
## Copyright (c) 2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
##
## NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
## property and proprietary rights in and to this material, related
## documentation and any modifications thereto. Any use, reproduction,
## disclosure or distribution of this material and related documentation
## without an express license agreement from NVIDIA CORPORATION or
## its affiliates is strictly prohibited.
##

# Example particle_mpc.yml with custom cost terms
# Copy this file and modify to use custom cost terms in your MPC configuration

model:
  horizon: 30
  state_filter_cfg:
    filter_coeff:
      position: 0.1
      velocity: 0.1
      acceleration: 0.0
    enable: True
  dt_traj_params:
    base_dt: 0.01
    base_ratio: 0.5
    max_dt: 0.04
  vel_scale: 1.0
  control_space: 'ACCELERATION'
  teleport_mode: False
  state_finite_difference_mode: "CENTRAL"

cost:
  # Standard CuRobo cost terms
  pose_cfg:
    vec_weight: [1.0,1.0, 1.0, 1.0, 1.0, 1.0]
    run_vec_weight: [1.0,1.0, 1.0, 1.0, 1.0, 1.0]
    weight:  [60,300.0,20,20]
    vec_convergence: [0.0, 0.00]
    terminal: True
    run_weight: 1.0
    use_metric: True

  cspace_cfg:
    weight: 1000.0
    terminal: True
    run_weight: 1.0

  bound_cfg:
    weight: [5000.0, 5000.0,5000.0,000.0]
    activation_distance: [0.1,0.1,0.1,0.1]
    smooth_weight: [0.0, 50.0, 0.0,0.0]
    run_weight_velocity: 0.0
    run_weight_acceleration: 1.0
    run_weight_jerk: 1.0
    null_space_weight: [10.0]

  primitive_collision_cfg:
    weight: 100000.0
    use_sweep: True
    sweep_steps: 4
    classify: False
    use_sweep_kernel: True
    use_speed_metric: False
    speed_dt: 0.1
    activation_distance: 0.025

  self_collision_cfg:
    weight: 50000.0
    classify: False

  stop_cfg:
    weight: 100.0
    max_nlimit: 0.25

  # CUSTOM COST TERMS - Explicit Configuration (Recommended)
  # 
  # EXPLICIT CONFIGURATION (Default Behavior):
  # Only custom costs explicitly listed below will be loaded.
  # This gives you full control over which costs are used and their parameters.
  # 
  # To use explicit configuration:
  # 1. Uncomment the 'custom:' section below
  # 2. Uncomment the specific costs you want to use
  # 3. Modify weights and parameters as needed
  # 4. Add your own custom costs following the same pattern
  
  # custom:
  #   # Custom costs for general robot behavior (arm_base)
  #   arm_base:
  #     # Energy minimization cost - penalizes velocity and acceleration
  #     energy_cost:
  #       module_path: "curobo.rollout.cost.custom.arm_base.energy_cost"
  #       class_name: "EnergyCost"
  #       config_class_name: "EnergyCostConfig"
  #       weight: 10.0
  #       terminal: False
  #       
  #     # Add your own arm_base custom costs here...
  #     # my_smoothness_cost:
  #     #   module_path: "curobo.rollout.cost.custom.arm_base.my_smoothness"
  #     #   class_name: "SmoothnessCost"
  #     #   config_class_name: "SmoothnessCostConfig"
  #     #   weight: 25.0
  #     #   smoothness_factor: 2.0
  #     #   terminal: False

  #   # Custom costs for task-specific behavior (arm_reacher)  
  #   arm_reacher:
  #     # Task-specific pose cost - additional end-effector tracking
  #     task_cost:
  #       module_path: "curobo.rollout.cost.custom.arm_reacher.task_cost"
  #       class_name: "TaskCost"
  #       config_class_name: "TaskCostConfig"
  #       weight: 30.0
  #       terminal: False
  #       
  #     # Add your own arm_reacher custom costs here...
  #     # my_orientation_cost:
  #     #   module_path: "curobo.rollout.cost.custom.arm_reacher.my_orientation"
  #     #   class_name: "OrientationCost"
  #     #   weight: 40.0
  #     #   orientation_penalty: 1.5
  #     #   terminal: True
  
  # ALTERNATIVE: AUTO-DISCOVERY (Advanced)
  # To enable auto-discovery instead of explicit configuration:
  # 1. Set enable_auto_discovery: true in your solver config
  # 2. Don't uncomment the 'custom:' section above (or leave it empty)
  # 3. The system will automatically load all .py files from:
  #    - curobo/src/curobo/rollout/cost/custom/arm_base/
  #    - curobo/src/curobo/rollout/cost/custom/arm_reacher/
  #
  # Note: Auto-discovery uses default weights and parameters.
  #       Use explicit configuration for fine-tuned control.

mppi:
  init_cov          : 0.8
  gamma             : 0.98
  n_iters           : 1
  cold_start_n_iters: 5
  step_size_mean    : 0.9
  step_size_cov     : 0.01
  beta              : 0.1
  alpha             : 1
  num_particles     : 400
  update_cov        : True
  cov_type          : "DIAG_A"
  kappa             : 0.0001
  null_act_frac     : 0.05
  sample_mode       : 'BEST'
  base_action       : 'REPEAT'
  squash_fn         : 'CLAMP'
  n_problems        : 1
  use_cuda_graph    : True
  seed              : 0
  store_debug       : False
  random_mean       : True
  sample_per_problem: False
  sync_cuda_time    : True
  use_coo_sparse    : True
  sample_params:
    fixed_samples: True
    sample_ratio: {'halton':0.3, 'halton-knot':0.7, 'random':0.0, 'random-knot':0.0}
    seed: 0
    filter_coeffs: [0.3, 0.3, 0.4]
    n_knots: 5
  debug_info:
 